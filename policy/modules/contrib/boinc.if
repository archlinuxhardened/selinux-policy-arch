## <summary>Platform for computing using volunteered resources.</summary>

########################################
## <summary>
##	All of the rules required to
##	administrate an boinc environment.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="role">
##	<summary>
##	Role allowed access.
##	</summary>
## </param>
## <rolecap/>
#
interface(`boinc_admin',`
	gen_require(`

		type boinc_t, boinc_project_t, boinc_log_t;
		type boinc_var_lib_t, boinc_tmp_t, boinc_initrc_exec_t;
		type boinc_project_var_lib_t, boinc_project_tmp_t;
	')

	allow $1 { boinc_t boinc_project_t }:process { ptrace signal_perms };
	ps_process_pattern($1, { boinc_t boinc_project_t })

	init_startstop_service($1, $2, boinc_t, boinc_initrc_exec_t)

	logging_search_logs($1)
	admin_pattern($1, boinc_log_t)

	files_search_tmp($1)
	admin_pattern($1, { boinc_project_tmp_t boinc_tmp_t })

	files_search_var_lib($1)
	admin_pattern($1, { boinc_project_var_lib_t boinc_var_lib_t })
')
