## <summary>Clustered Database based on Samba Trivial Database.</summary>

########################################
## <summary>
##	Create, read, write, and delete
##	ctdbd lib files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`ctdbd_manage_lib_files',`
	gen_require(`
		type ctdbd_var_lib_t;
	')

	files_search_var_lib($1)
	manage_files_pattern($1, ctdbd_var_lib_t, ctdbd_var_lib_t)
')

#######################################
## <summary>
##	Connect to ctdbd with a unix
##	domain stream socket.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`ctdbd_stream_connect',`
	gen_require(`
		type ctdbd_t, ctdbd_var_run_t, ctdbd_tmp_t;
	')

	files_search_pids($1)
	stream_connect_pattern($1, { ctdbd_tmp_t ctdbd_var_run_t }, { ctdbd_tmp_t ctdbd_var_run_t }, ctdbd_t)
')

########################################
## <summary>
##	All of the rules required to
##	administrate an ctdb environment.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
## <param name="role">
##	<summary>
##	Role allowed access.
##	</summary>
## </param>
## <rolecap/>
#
interface(`ctdb_admin',`
	gen_require(`
		type ctdbd_t, ctdbd_initrc_exec_t, ctdbd_tmp_t;
		type ctdbd_log_t, ctdbd_var_lib_t, ctdbd_var_run_t;
	')

	allow $1 ctdbd_t:process { ptrace signal_perms };
	ps_process_pattern($1, ctdbd_t)

	init_startstop_service($1, $2, ctdbd_t, ctdbd_initrc_exec_t)

	logging_search_logs($1)
	admin_pattern($1, ctdbd_log_t)

	files_search_tmp($1)
	admin_pattern($1, ctdbd_tmp_t)

	files_search_var_lib($1)
	admin_pattern($1, ctdbd_var_lib_t)

	files_search_pids($1)
	admin_pattern($1, ctdbd_var_run_t)
')
